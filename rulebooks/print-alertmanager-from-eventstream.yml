# rulebooks/print-alertmanager-from-eventstream.yml
- name: print all alerts from Event Stream
  hosts: localhost

  # No sources needed when the activation is attached to an Event Stream.

  rules:
    - name: print raw event (headers + payload)
      condition: event is defined
      action:
        debug:
          msg: |
            ===== EDA Event (raw) =====
            meta:    {{ event.meta    | default({}) | to_nice_json }}
            headers: {{ event.headers | default({}) | to_nice_json }}
            payload: {{ event.payload | default({}) | to_nice_json }}

    # If the Event Stream delivered an Alertmanager payload, it will be under event.payload
    - name: print each alert in payload.alerts
      condition: event.payload is defined and event.payload.alerts is defined
      action:
        debug:
          msg: |
            ===== Iterating alerts ({{ event.payload.alerts | length }}) =====
            {%- for a in event.payload.alerts %}
            --- alert {{ loop.index }} ---
            status:        {{ a.status | default('') }}
            alertname:     {{ a.labels.alertname | default('') }}
            severity:      {{ a.labels.severity | default('') }}
            namespace:     {{ a.labels.namespace | default('') }}
            instance:      {{ a.labels.instance | default('') }}
            startsAt:      {{ a.startsAt | default('') }}
            endsAt:        {{ a.endsAt | default('') }}
            summary:       {{ a.annotations.summary | default('') }}
            description:   {{ a.annotations.description | default('') }}
            labels:        {{ a.labels | to_nice_json }}
            annotations:   {{ a.annotations | to_nice_json }}
            -------------------------------
            {%- endfor %}

    # Safety net in case your ES was set to "raw body" and EDA unwrapped the payload at top-level
    - name: print each alert if alerts[] is top-level
      condition: event.alerts is defined
      action:
        debug:
          msg: |
            ===== Iterating alerts ({{ event.alerts | length }}) =====
            {%- for a in event.alerts %}
            --- alert {{ loop.index }} ---
            status:        {{ a.status | default('') }}
            alertname:     {{ a.labels.alertname | default('') }}
            severity:      {{ a.labels.severity | default('') }}
            namespace:     {{ a.labels.namespace | default('') }}
            instance:      {{ a.labels.instance | default('') }}
            startsAt:      {{ a.startsAt | default('') }}
            endsAt:        {{ a.endsAt | default('') }}
            summary:       {{ a.annotations.summary | default('') }}
            description:   {{ a.annotations.description | default('') }}
            labels:        {{ a.labels | to_nice_json }}
            annotations:   {{ a.annotations | to_nice_json }}
            -------------------------------
            {%- endfor %}
