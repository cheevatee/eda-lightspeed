# rulebooks/print-from-eventstream.yml
- name: print alerts coming from Event Stream
  hosts: localhost

  # Placeholder so the Event Stream can be mapped to a source
  sources:
    - ansible.eda.webhook:
        host: 0.0.0.0
        port: 5000

  rules:
    - name: print each alert under payload.alerts
      condition: event.payload is defined and event.payload.alerts is defined
      actions:
#        - debug:
#            msg: "RAW EVENT: {{ event.payload.alerts }}"
        - debug:
            msg: |
              severity: {{ event.payload.alerts.0.labels.severity | default('') }}
              namespace: {{ event.payload.alerts.0.labels.namespace | default('') }}
              summary: {{ event.payload.alerts.0.annotations.summary | default('') }}
              description {{ event.payload.alerts.0.annotations.description | default('') }}
#        - run_job_template:
#            name: "Handle Alertmanager alerts from EDA"
        - run_workflow_template:
            name: "EDA Lightspeed"
            organization: "Default"
            job_args:
              # These appear to AAP as extra vars (see notes below)
              extra_vars:
#                alerts: "{{ event.payload.alerts }}"
#                payload: "{{ event.payload }}" # optional full payload
                severity: "{{ event.payload.alerts.0.labels.severity | default('') }}"
                namespace: "{{ event.payload.alerts.0.labels.namespace | default('') }}"
                summary: "{{ event.payload.alerts.0.annotations.summary | default('') }}"
                description: "{{ event.payload.alerts.0.annotations.description | default('') }}"
